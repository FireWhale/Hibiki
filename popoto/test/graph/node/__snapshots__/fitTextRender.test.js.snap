// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render Should works with 1 word as text Should render correctly 1`] = `"<div><g><rect fill=\\"mocked_color_value\\" class=\\"mocked_css_class_value\\" x=\\"-53\\" y=\\"-50\\" rx=\\"5\\" ry=\\"5\\" width=\\"106\\" height=\\"100\\" transform=\\"translate(0,0) scale(0.5543250876981161)\\"></rect><text class=\\"fitted-text mocked_css_class_value\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(0.5543250876981161)\\"><tspan x=\\"0\\" y=\\"3.6000000000000005\\">mockedTextValue</tspan></text></g></div>"`;

exports[`render Should works with empty text Should render correctly 1`] = `"<div><g><rect fill=\\"mocked_color_value\\" class=\\"mocked_css_class_value\\" x=\\"-53\\" y=\\"-50\\" rx=\\"5\\" ry=\\"5\\" width=\\"6\\" height=\\"0\\" transform=\\"translate(0,0) scale(1)\\"></rect><text class=\\"fitted-text mocked_css_class_value\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(1)\\"></text></g></div>"`;

exports[`render Should works with integer as text Should render correctly 1`] = `"<div><g><rect fill=\\"mocked_color_value\\" class=\\"mocked_css_class_value\\" x=\\"-53\\" y=\\"-50\\" rx=\\"5\\" ry=\\"5\\" width=\\"106\\" height=\\"100\\" transform=\\"translate(0,0) scale(5.892556509887896)\\"></rect><text class=\\"fitted-text mocked_css_class_value\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(5.892556509887896)\\"><tspan x=\\"0\\" y=\\"3.6000000000000005\\">0</tspan></text></g></div>"`;

exports[`render Should works with multiple words as text Should render correctly 1`] = `"<div><g><rect fill=\\"mocked_color_value\\" class=\\"mocked_css_class_value\\" x=\\"-53\\" y=\\"-50\\" rx=\\"5\\" ry=\\"5\\" width=\\"106\\" height=\\"100\\" transform=\\"translate(0,0) scale(1.2422599874998832)\\"></rect><text class=\\"fitted-text mocked_css_class_value\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(1.2422599874998832)\\"><tspan x=\\"0\\" y=\\"-8.399999999999999\\">mocked</tspan><tspan x=\\"0\\" y=\\"3.6000000000000005\\">text</tspan><tspan x=\\"0\\" y=\\"15.600000000000001\\">value</tspan></text></g></div>"`;

exports[`render Should works with multiple words on same span Should render correctly 1`] = `"<div><g><rect fill=\\"mocked_color_value\\" class=\\"mocked_css_class_value\\" x=\\"-53\\" y=\\"-50\\" rx=\\"5\\" ry=\\"5\\" width=\\"106\\" height=\\"100\\" transform=\\"translate(0,0) scale(1.0942202738310212)\\"></rect><text class=\\"fitted-text mocked_css_class_value\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(1.0942202738310212)\\"><tspan x=\\"0\\" y=\\"-8.399999999999999\\">mocked</tspan><tspan x=\\"0\\" y=\\"3.6000000000000005\\">text</tspan><tspan x=\\"0\\" y=\\"15.600000000000001\\">a value</tspan></text></g></div>"`;

exports[`render Should works with undefined text Should render correctly 1`] = `"<div><g><rect fill=\\"mocked_color_value\\" class=\\"mocked_css_class_value\\" x=\\"-53\\" y=\\"-50\\" rx=\\"5\\" ry=\\"5\\" width=\\"6\\" height=\\"0\\" transform=\\"translate(0,0) scale(1)\\"></rect><text class=\\"fitted-text mocked_css_class_value\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(1)\\"></text></g></div>"`;
