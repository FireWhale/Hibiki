<%= render :partial => 'layouts/forms/well_toggle', locals: {:div_id => opts[:sub_div_id], :toggle_id => "#{opts[:sub_div_id]}Toggle"} unless opts[:sub_div_id].nil? %>
<%= content_tag(:h4, class: "text-center") {opts[:title]} unless opts[:title].nil? %>
<div<%= ' id="'.html_safe + opts[:sub_div_id] + '"'.html_safe unless opts[:sub_div_id].nil? %>>
  <% unless record.send("related_#{record.class.to_s.downcase}_relations").nil?  %>
    <% record.send("related_#{record.class.to_s.downcase}_relations").each do |relation| %>
      <div>
        <%= fields_for "#{form_prefix}[update_related_#{record.class.to_s.downcase}s][#{relation.id}]", relation do |f|  %>
          <%= check_box_tag "#{form_prefix}[remove_related_#{record.class.to_s.downcase}s][]", relation.id %>
          <%= link_to language_helper(relation.send("#{record.class.to_s.downcase}1"),:name), relation.send("#{record.class.to_s.downcase}1") %><%= "(#{relation.send("#{record.class.to_s.downcase}1_id")})" if record.class == Song %>
          <%= f.select :category, record.class::SelfRelationships %>
          <%= link_to language_helper(relation.send("#{record.class.to_s.downcase}2"),:name), relation.send("#{record.class.to_s.downcase}2") %> <%= "(#{relation.send("#{record.class.to_s.downcase}2_id")})" if record.class == Song %>
        <% end %>      
      </div>
    <% end %>
  <% end %>
  <div id="<%= "SelfRelationFields" + record.id.to_s %>"></div>
  <%= link_to "Add a Related #{record.class}", add_model_path(parent_div: "#SelfRelationFields#{record.id.to_s}", self_relationship_model: record.class.to_s, category_field_names: "#{form_prefix}[new_related_#{record.class.to_s.downcase}_categories]", field_names: "#{form_prefix}[new_related_#{record.class.to_s.downcase}_ids]", autocomplete_model: record.class.to_s.downcase), :remote => true %>         
</div>

