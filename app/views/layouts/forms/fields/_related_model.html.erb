<%= render :partial => 'layouts/forms/well_toggle', locals: {:div_id => opts[:sub_div_id], :toggle_id => "#{opts[:sub_div_id]}Toggle"} unless opts[:sub_div_id].nil? %>
<%= content_tag(:h4, class: "text-center") {opts[:title]} unless opts[:title].nil? %>
<div<%= ' id="'.html_safe + opts[:sub_div_id] + '"'.html_safe unless opts[:sub_div_id].nil? %>>
  <% unless record.send("#{opts[:relation_model]}").nil? %>
    <% record.send("#{opts[:relation_model]}").each do |relation| %>
      <div>
        <%= check_box_tag "#{form_prefix}[remove_#{opts[:relation_model]}][]", relation.id %>
        <%= link_to relation.send(opts[:model]).internal_name, relation.send(opts[:model])%>
        <% unless opts[:categories].nil? %>
          <%= fields_for "#{form_prefix}[update_#{opts[:relation_model]}][#{relation.id}]" do |f| %>
            <%= f.select 'category', opts[:categories], selected: relation.category %>
          <% end %>
        <% end %>
      </div>
    <% end %>
  <% end %>
  <div id="<%= opts[:model].capitalize %>Fields"></div>
  <%= link_to "Add a #{opts[:model]}", add_model_path(:parent_div => "##{opts[:model].capitalize}Fields", category_field_names: "#{form_prefix}[new_#{opts[:model]}_categories]", category_select: opts[:categories], field_names: "#{form_prefix}[new_#{opts[:model]}_ids]", autocomplete_model: opts[:model]), :remote => true %></br></br>          
</div>
       